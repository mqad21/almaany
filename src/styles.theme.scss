@import '../node_modules/@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// **Be sure that you only ever include this mixin once!**
@include mat-core();

// Define the default theme (same as the example above).
$light-primary: mat-palette($mat-teal, 600);
$light-accent: mat-palette($mat-teal, A200, A100, A400);
$light-theme: mat-light-theme($light-primary, $light-accent);

// Include the default theme styles (color and default density)
@include angular-material-theme($light-theme);


// Define an alternate dark theme.
$dark-primary: mat-palette($mat-teal, 400);
$dark-accent: mat-palette($mat-teal, A200, A100, A400);
$dark-theme: mat-dark-theme($dark-primary, $dark-accent
);
$dark-white: mat-palette($mat-gray, 700);

// Include the dark color styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.dark-theme {
    @include angular-material-theme($dark-theme);
}

.dark-theme .active-link {
    background-color: mat-color($dark-primary, darker) !important; 
    font-weight: 600;
}

.dark-theme.container {
    background-color: mat-color($dark-white);
}

.active-link {
    background-color: mat-color($light-primary, lighter) !important; 
    font-weight: 600;
}

.link {
    color: mat-color($light-primary) !important; 
}

.dark-theme .link {
    color: mat-color($dark-primary) !important; 
}

.dark-theme .mat-body {
    color: #e6e6e6;
}